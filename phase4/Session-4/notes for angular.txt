-------------------------------------------------------------------
Step1: Installing Node and NPM
-------------------------------------------------------------------
to check the version of node

> open cmd> node -v
	output: v16.14.2


2. NPM manager -node package manager
---provides the bundle of packages which we cam download directly 	using CMD
---ex. angular,react,view JS,typescript,bootstrap
---NPM installed automatically whenever you install node Js in your     system
> npm -v  (gives npm version)
	output: 8.5.0
-------------------------------------------------------------------

Step: 2  installing TypeScript

-------------------------------------------------------------------

> npm install typescript -g

to check the version
>tsc -v
	output: Version 4.6.3



----prepare one first.ts file in visual studio code and go to terminal> new terminal > open cmd and follow the below set of code
to compile run the following code
>tsc first.ts

you will see first.js file in the folder

> node first.js

you will see the output in console


preparing tsconfig.json file: it is a file to configure json file

how .ts converts to .js we can configure in this file

> tsc --init  (will create this file we can check the same)



-------------------------------------------------------------------
Step: 3    Install Angular on youe machine
-------------------------------------------------------------------

let's install angular

> npm install -g @angular/cli  (OR   npm i -g @angular/cli)

to check the version
> ng --version


let's create angular project
****************************
ng new myapp  (you can give any name)
	it will ask you two question
	1. DO YOU WANT TO ADD ANGULAR ROUTING? : Y
	2. CHOOSE CSS: CSS


once my app is created change the directory using cmd command 
>cd myapp

or

 goto > file> open folder> select the folder of your app that you have created just now

to run angular project
>ng serve

goto app.component.html file and edit the code whichever you like to do


<h1> My First Angular App </h1>

--------------------------------------------------------------------Let's Prepare one component 
****************************
add another cmd from terminal and execute the following code

prepare component by using following command

>ng generate component header (OR ng g c header)  ///header is name 							of component
 goto > src> app> header> header.component.html and prepare the header you want


<h1>header Works!</h1>


goto> src> app> header> header.component.css and add style

h1{
    background-color: antiquewhite;
}



now go to  header.component.ts and copy the selector name which is present inside @component{


}



now go to app.component.html

and write the name <app-header></app-header>


save it and you will be able to see the out put in the browser 






similarly , you can prepare footer  and integrate in app using the steps mentioned above




---------------------------------------------------------------------------------------------------------------
Data Binding:

types:
	1. source to view (.ts to .html)
	2. view to source (.html to .ts)
	3. source to view to source (two way binding)
Data binding can be done in two ways

	1. Interpolation binding {{}}
	2. Property binding []


prepare the binding component from node js by following command
> ng g c binding


once it is done we can bind the data

to bind the data go to binding.component.ts--- and add following at the bottom
	name:string ="Nikunj Soni";
  	url:string ="https://www.google.com";



got to binding.component.html---add the following




<h2>Data Binding</h2>
<h3>Let's Bind data from source to view using interpolation</h3>
<hr>
<p>{{name}}</p>

<h3>Let's Bind data from source to view using Property binding: [] : bind the value with attribute</h3>
<hr>
<a [href]="url" >Connect to Google</a>



again go to> binding.component.ts and scroll up and copy the name of selector which is present inside @component{
}



now go to your app.component.html

and add the copied name like this

<app-binding></app-binding>


save and check the output in browser



